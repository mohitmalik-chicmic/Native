{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","JSZip","arguments","length","Error","files","Object","create","comment","root","clone","newObj","i","prototype","loadAsync","support","defaults","version","content","options","external","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;AACgBE,MAAAA,K,iBAAhBF,Y;;AACgBG,MAAAA,K,iBAAhBH,Y;;AACgBI,MAAAA,K,iBAAhBJ,Y;;;8BAEHA,Y,GAAe,cAAYK,G;;AACjCP,MAAAA,UAAU,CAACQ,MAAX,CAAkBN,YAAlB,EAAgC,UAAUO,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;AAEA;AACD;AACA;AACA;;AACC,iBAASC,KAAT,GAAiB;AACb;AACA,cAAG,EAAE,gBAAgBA,KAAlB,CAAH,EAA6B;AACzB,mBAAO,IAAIA,KAAJ,EAAP;AACH;;AAED,cAAGC,SAAS,CAACC,MAAb,EAAqB;AACjB,kBAAM,IAAIC,KAAJ,CAAU,gGAAV,CAAN;AACH,WARY,CAUb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb;AAEA,eAAKC,OAAL,GAAe,IAAf,CApBa,CAsBb;;AACA,eAAKC,IAAL,GAAY,EAAZ;;AACA,eAAKC,KAAL,GAAa,YAAW;AACpB,gBAAIC,MAAM,GAAG,IAAIV,KAAJ,EAAb;;AACA,iBAAK,IAAIW,CAAT,IAAc,IAAd,EAAoB;AAChB,kBAAI,OAAO,KAAKA,CAAL,CAAP,KAAmB,UAAvB,EAAmC;AAC/BD,gBAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,KAAKA,CAAL,CAAZ;AACH;AACJ;;AACD,mBAAOD,MAAP;AACH,WARD;AASH;;AACDV,QAAAA,KAAK,CAACY,SAAN,GAAkBhB,OAAO,CAAC,UAAD,CAAzB;AACAI,QAAAA,KAAK,CAACY,SAAN,CAAgBC,SAAhB,GAA4BjB,OAAO,CAAC,QAAD,CAAnC;AACAI,QAAAA,KAAK,CAACc,OAAN,GAAgBlB,OAAO,CAAC,WAAD,CAAvB;AACAI,QAAAA,KAAK,CAACe,QAAN,GAAiBnB,OAAO,CAAC,YAAD,CAAxB,CA/C0F,CAiD1F;AACA;;AACAI,QAAAA,KAAK,CAACgB,OAAN,GAAgB,QAAhB;;AAEAhB,QAAAA,KAAK,CAACa,SAAN,GAAkB,UAAUI,OAAV,EAAmBC,OAAnB,EAA4B;AAC1C,iBAAO,IAAIlB,KAAJ,GAAYa,SAAZ,CAAsBI,OAAtB,EAA+BC,OAA/B,CAAP;AACH,SAFD;;AAIAlB,QAAAA,KAAK,CAACmB,QAAN,GAAiBvB,OAAO,CAAC,YAAD,CAAxB;AACAC,QAAAA,MAAM,CAACF,OAAP,GAAiBK,KAAjB,CA1D0F,CA6D3F;;AAEA,2BAAAoB,WAAW,GAAGvB,MAAM,CAACF,OAArB;AAGC,OAlED,EAkEG,OAAO;AACR,oBAAYR,IADJ;AAER,kBAAUE,KAFF;AAGR,qBAAaC,KAHL;AAIR,sBAAcC,KAJN;AAKR,sBAAcC;AALN,OAAP,CAlEH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './object';\nimport { __cjsMetaURL as _req0} from './load';\nimport { __cjsMetaURL as _req1} from './support';\nimport { __cjsMetaURL as _req2} from './defaults';\nimport { __cjsMetaURL as _req3} from './external';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n /**\n  * Representation a of zip file in js\n  * @constructor\n  */\n function JSZip() {\n     // if this constructor is used without `new`, it adds `new` before itself:\n     if(!(this instanceof JSZip)) {\n         return new JSZip();\n     }\n\n     if(arguments.length) {\n         throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");\n     }\n\n     // object containing the files :\n     // {\n     //   \"folder/\" : {...},\n     //   \"folder/data.txt\" : {...}\n     // }\n     // NOTE: we use a null prototype because we do not\n     // want filenames like \"toString\" coming from a zip file\n     // to overwrite methods and attributes in a normal Object.\n     this.files = Object.create(null);\n\n     this.comment = null;\n\n     // Where we are in the hierarchy\n     this.root = \"\";\n     this.clone = function() {\n         var newObj = new JSZip();\n         for (var i in this) {\n             if (typeof this[i] !== \"function\") {\n                 newObj[i] = this[i];\n             }\n         }\n         return newObj;\n     };\n }\n JSZip.prototype = require(\"./object\");\n JSZip.prototype.loadAsync = require(\"./load\");\n JSZip.support = require(\"./support\");\n JSZip.defaults = require(\"./defaults\");\n\n // TODO find a better way to handle this version,\n // a require('package.json').version doesn't work with webpack, see #327\n JSZip.version = \"3.10.1\";\n\n JSZip.loadAsync = function (content, options) {\n     return new JSZip().loadAsync(content, options);\n };\n\n JSZip.external = require(\"./external\");\n module.exports = JSZip;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './object': _req,\n  './load': _req0,\n  './support': _req1,\n  './defaults': _req2,\n  './external': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}