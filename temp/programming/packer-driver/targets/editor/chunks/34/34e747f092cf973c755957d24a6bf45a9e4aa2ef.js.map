{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/pako/lib/zlib/gzheader.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","GZheader","text","time","xflags","os","extra","extra_len","name","comment","hcrc","done","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;;8BAEDC,Y,GAAe,cAAYC,G;;AACjCF,MAAAA,UAAU,CAACG,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,qBAJ0F,CAM1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAASC,QAAT,GAAoB;AAClB;AACA,eAAKC,IAAL,GAAkB,CAAlB;AACA;;AACA,eAAKC,IAAL,GAAkB,CAAlB;AACA;;AACA,eAAKC,MAAL,GAAkB,CAAlB;AACA;;AACA,eAAKC,EAAL,GAAkB,CAAlB;AACA;;AACA,eAAKC,KAAL,GAAkB,IAAlB;AACA;;AACA,eAAKC,SAAL,GAAkB,CAAlB,CAZkB,CAYG;AACA;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AACA;;AACA,eAAKC,IAAL,GAAkB,EAAlB;AACA;AACA;;AACA;;AACA,eAAKC,OAAL,GAAkB,EAAlB;AACA;AACA;;AACA;;AACA,eAAKC,IAAL,GAAkB,CAAlB;AACA;;AACA,eAAKC,IAAL,GAAkB,KAAlB;AACD;;AAEDb,QAAAA,MAAM,CAACF,OAAP,GAAiBK,QAAjB,CA7D0F,CAgE3F;;AAEA,2BAAAW,WAAW,GAAGd,MAAM,CAACF,OAArB;AAGC,OArED,EAqEG,EArEH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n // (C) 1995-2013 Jean-loup Gailly and Mark Adler\n // (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n //\n // This software is provided 'as-is', without any express or implied\n // warranty. In no event will the authors be held liable for any damages\n // arising from the use of this software.\n //\n // Permission is granted to anyone to use this software for any purpose,\n // including commercial applications, and to alter it and redistribute it\n // freely, subject to the following restrictions:\n //\n // 1. The origin of this software must not be misrepresented; you must not\n //   claim that you wrote the original software. If you use this software\n //   in a product, an acknowledgment in the product documentation would be\n //   appreciated but is not required.\n // 2. Altered source versions must be plainly marked as such, and must not be\n //   misrepresented as being the original software.\n // 3. This notice may not be removed or altered from any source distribution.\n\n function GZheader() {\n   /* true if compressed data believed to be text */\n   this.text       = 0;\n   /* modification time */\n   this.time       = 0;\n   /* extra flags (not used when writing a gzip file) */\n   this.xflags     = 0;\n   /* operating system */\n   this.os         = 0;\n   /* pointer to extra field or Z_NULL if none */\n   this.extra      = null;\n   /* extra field length (valid if extra != Z_NULL) */\n   this.extra_len  = 0; // Actually, we don't need it in JS,\n                        // but leave for few code modifications\n\n   //\n   // Setup limits is not necessary because in js we should not preallocate memory\n   // for inflate use constant limit in 65536 bytes\n   //\n\n   /* space at extra (only when reading header) */\n   // this.extra_max  = 0;\n   /* pointer to zero-terminated file name or Z_NULL */\n   this.name       = '';\n   /* space at name (only when reading header) */\n   // this.name_max   = 0;\n   /* pointer to zero-terminated comment or Z_NULL */\n   this.comment    = '';\n   /* space at comment (only when reading header) */\n   // this.comm_max   = 0;\n   /* true if there was or will be a header crc */\n   this.hcrc       = 0;\n   /* true when done reading gzip header (not used when writing a gzip file) */\n   this.done       = false;\n }\n\n module.exports = GZheader;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}