{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/utils.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","support","base64","nodejsUtils","external","string2binary","str","result","uint8array","Uint8Array","length","Array","stringToArrayLike","newBlob","part","type","checkSupport","Blob","e","Builder","self","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob","Error","identity","input","array","i","charCodeAt","arrayToStringHelper","stringifyByChunk","chunk","k","len","String","fromCharCode","apply","push","slice","Math","min","subarray","join","stringifyByChar","resultStr","applyCanBeUsed","nodebuffer","allocBuffer","arrayLikeToString","getTypeOf","canUseApply","floor","applyFromCharCode","arrayLikeToArrayLike","arrayFrom","arrayTo","transform","buffer","newBufferFrom","byteLength","transformTo","outputType","inputType","resolve","path","parts","split","index","pop","Object","prototype","toString","call","isBuffer","arraybuffer","ArrayBuffer","supported","toLowerCase","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","res","code","toUpperCase","delay","callback","args","setImmediate","inherits","ctor","superCtor","Obj","extend","attr","arguments","hasOwnProperty","prepareContent","name","inputData","isBinary","isOptimizedBinaryString","isBase64","promise","Promise","then","data","isBlob","blob","indexOf","FileReader","reject","reader","onload","target","onerror","error","readAsArrayBuffer","dataType","decode","_cjsExports","_newBlob","_applyFromCharCode","_transformTo","_resolve","_getTypeOf","_checkSupport","_MAX_VALUE_16BITS","_MAX_VALUE_32BITS","_pretty","_delay","_inherits","_extend","_prepareContent"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './support';\nimport { __cjsMetaURL as _req0} from './base64';\nimport { __cjsMetaURL as _req1} from './nodejsUtils';\nimport { __cjsMetaURL as _req2} from './external';\nimport { __cjsMetaURL as _req3} from 'setimmediate';\nlet _cjsExports;\nlet _newBlob;\nlet _applyFromCharCode;\nlet _transformTo;\nlet _resolve;\nlet _getTypeOf;\nlet _checkSupport;\nlet _MAX_VALUE_16BITS;\nlet _MAX_VALUE_32BITS;\nlet _pretty;\nlet _delay;\nlet _inherits;\nlet _extend;\nlet _prepareContent;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var support = require(\"./support\");\n var base64 = require(\"./base64\");\n var nodejsUtils = require(\"./nodejsUtils\");\n var external = require(\"./external\");\n require(\"setimmediate\");\n\n\n /**\n  * Convert a string that pass as a \"binary string\": it should represent a byte\n  * array but may have > 255 char codes. Be sure to take only the first byte\n  * and returns the byte array.\n  * @param {String} str the string to transform.\n  * @return {Array|Uint8Array} the string in a binary format.\n  */\n function string2binary(str) {\n     var result = null;\n     if (support.uint8array) {\n         result = new Uint8Array(str.length);\n     } else {\n         result = new Array(str.length);\n     }\n     return stringToArrayLike(str, result);\n }\n\n /**\n  * Create a new blob with the given content and the given type.\n  * @param {String|ArrayBuffer} part the content to put in the blob. DO NOT use\n  * an Uint8Array because the stock browser of android 4 won't accept it (it\n  * will be silently converted to a string, \"[object Uint8Array]\").\n  *\n  * Use only ONE part to build the blob to avoid a memory leak in IE11 / Edge:\n  * when a large amount of Array is used to create the Blob, the amount of\n  * memory consumed is nearly 100 times the original data amount.\n  *\n  * @param {String} type the mime type of the blob.\n  * @return {Blob} the created blob.\n  */\n exports.newBlob = function(part, type) {\n     exports.checkSupport(\"blob\");\n\n     try {\n         // Blob constructor\n         return new Blob([part], {\n             type: type\n         });\n     }\n     catch (e) {\n\n         try {\n             // deprecated, browser only, old way\n             var Builder = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder;\n             var builder = new Builder();\n             builder.append(part);\n             return builder.getBlob(type);\n         }\n         catch (e) {\n\n             // well, fuck ?!\n             throw new Error(\"Bug : can't construct the Blob.\");\n         }\n     }\n\n\n };\n /**\n  * The identity function.\n  * @param {Object} input the input.\n  * @return {Object} the same input.\n  */\n function identity(input) {\n     return input;\n }\n\n /**\n  * Fill in an array with a string.\n  * @param {String} str the string to use.\n  * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).\n  * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.\n  */\n function stringToArrayLike(str, array) {\n     for (var i = 0; i < str.length; ++i) {\n         array[i] = str.charCodeAt(i) & 0xFF;\n     }\n     return array;\n }\n\n /**\n  * An helper for the function arrayLikeToString.\n  * This contains static information and functions that\n  * can be optimized by the browser JIT compiler.\n  */\n var arrayToStringHelper = {\n     /**\n      * Transform an array of int into a string, chunk by chunk.\n      * See the performances notes on arrayLikeToString.\n      * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n      * @param {String} type the type of the array.\n      * @param {Integer} chunk the chunk size.\n      * @return {String} the resulting string.\n      * @throws Error if the chunk is too big for the stack.\n      */\n     stringifyByChunk: function(array, type, chunk) {\n         var result = [], k = 0, len = array.length;\n         // shortcut\n         if (len <= chunk) {\n             return String.fromCharCode.apply(null, array);\n         }\n         while (k < len) {\n             if (type === \"array\" || type === \"nodebuffer\") {\n                 result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));\n             }\n             else {\n                 result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));\n             }\n             k += chunk;\n         }\n         return result.join(\"\");\n     },\n     /**\n      * Call String.fromCharCode on every item in the array.\n      * This is the naive implementation, which generate A LOT of intermediate string.\n      * This should be used when everything else fail.\n      * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n      * @return {String} the result.\n      */\n     stringifyByChar: function(array){\n         var resultStr = \"\";\n         for(var i = 0; i < array.length; i++) {\n             resultStr += String.fromCharCode(array[i]);\n         }\n         return resultStr;\n     },\n     applyCanBeUsed : {\n         /**\n          * true if the browser accepts to use String.fromCharCode on Uint8Array\n          */\n         uint8array : (function () {\n             try {\n                 return support.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;\n             } catch (e) {\n                 return false;\n             }\n         })(),\n         /**\n          * true if the browser accepts to use String.fromCharCode on nodejs Buffer.\n          */\n         nodebuffer : (function () {\n             try {\n                 return support.nodebuffer && String.fromCharCode.apply(null, nodejsUtils.allocBuffer(1)).length === 1;\n             } catch (e) {\n                 return false;\n             }\n         })()\n     }\n };\n\n /**\n  * Transform an array-like object to a string.\n  * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n  * @return {String} the result.\n  */\n function arrayLikeToString(array) {\n     // Performances notes :\n     // --------------------\n     // String.fromCharCode.apply(null, array) is the fastest, see\n     // see http://jsperf.com/converting-a-uint8array-to-a-string/2\n     // but the stack is limited (and we can get huge arrays !).\n     //\n     // result += String.fromCharCode(array[i]); generate too many strings !\n     //\n     // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2\n     // TODO : we now have workers that split the work. Do we still need that ?\n     var chunk = 65536,\n         type = exports.getTypeOf(array),\n         canUseApply = true;\n     if (type === \"uint8array\") {\n         canUseApply = arrayToStringHelper.applyCanBeUsed.uint8array;\n     } else if (type === \"nodebuffer\") {\n         canUseApply = arrayToStringHelper.applyCanBeUsed.nodebuffer;\n     }\n\n     if (canUseApply) {\n         while (chunk > 1) {\n             try {\n                 return arrayToStringHelper.stringifyByChunk(array, type, chunk);\n             } catch (e) {\n                 chunk = Math.floor(chunk / 2);\n             }\n         }\n     }\n\n     // no apply or chunk error : slow and painful algorithm\n     // default browser on android 4.*\n     return arrayToStringHelper.stringifyByChar(array);\n }\n\n exports.applyFromCharCode = arrayLikeToString;\n\n\n /**\n  * Copy the data from an array-like to an other array-like.\n  * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.\n  * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.\n  * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.\n  */\n function arrayLikeToArrayLike(arrayFrom, arrayTo) {\n     for (var i = 0; i < arrayFrom.length; i++) {\n         arrayTo[i] = arrayFrom[i];\n     }\n     return arrayTo;\n }\n\n // a matrix containing functions to transform everything into everything.\n var transform = {};\n\n // string to ?\n transform[\"string\"] = {\n     \"string\": identity,\n     \"array\": function(input) {\n         return stringToArrayLike(input, new Array(input.length));\n     },\n     \"arraybuffer\": function(input) {\n         return transform[\"string\"][\"uint8array\"](input).buffer;\n     },\n     \"uint8array\": function(input) {\n         return stringToArrayLike(input, new Uint8Array(input.length));\n     },\n     \"nodebuffer\": function(input) {\n         return stringToArrayLike(input, nodejsUtils.allocBuffer(input.length));\n     }\n };\n\n // array to ?\n transform[\"array\"] = {\n     \"string\": arrayLikeToString,\n     \"array\": identity,\n     \"arraybuffer\": function(input) {\n         return (new Uint8Array(input)).buffer;\n     },\n     \"uint8array\": function(input) {\n         return new Uint8Array(input);\n     },\n     \"nodebuffer\": function(input) {\n         return nodejsUtils.newBufferFrom(input);\n     }\n };\n\n // arraybuffer to ?\n transform[\"arraybuffer\"] = {\n     \"string\": function(input) {\n         return arrayLikeToString(new Uint8Array(input));\n     },\n     \"array\": function(input) {\n         return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));\n     },\n     \"arraybuffer\": identity,\n     \"uint8array\": function(input) {\n         return new Uint8Array(input);\n     },\n     \"nodebuffer\": function(input) {\n         return nodejsUtils.newBufferFrom(new Uint8Array(input));\n     }\n };\n\n // uint8array to ?\n transform[\"uint8array\"] = {\n     \"string\": arrayLikeToString,\n     \"array\": function(input) {\n         return arrayLikeToArrayLike(input, new Array(input.length));\n     },\n     \"arraybuffer\": function(input) {\n         return input.buffer;\n     },\n     \"uint8array\": identity,\n     \"nodebuffer\": function(input) {\n         return nodejsUtils.newBufferFrom(input);\n     }\n };\n\n // nodebuffer to ?\n transform[\"nodebuffer\"] = {\n     \"string\": arrayLikeToString,\n     \"array\": function(input) {\n         return arrayLikeToArrayLike(input, new Array(input.length));\n     },\n     \"arraybuffer\": function(input) {\n         return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;\n     },\n     \"uint8array\": function(input) {\n         return arrayLikeToArrayLike(input, new Uint8Array(input.length));\n     },\n     \"nodebuffer\": identity\n };\n\n /**\n  * Transform an input into any type.\n  * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.\n  * If no output type is specified, the unmodified input will be returned.\n  * @param {String} outputType the output type.\n  * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.\n  * @throws {Error} an Error if the browser doesn't support the requested output type.\n  */\n exports.transformTo = function(outputType, input) {\n     if (!input) {\n         // undefined, null, etc\n         // an empty string won't harm.\n         input = \"\";\n     }\n     if (!outputType) {\n         return input;\n     }\n     exports.checkSupport(outputType);\n     var inputType = exports.getTypeOf(input);\n     var result = transform[inputType][outputType](input);\n     return result;\n };\n\n /**\n  * Resolve all relative path components, \".\" and \"..\", in a path. If these relative components\n  * traverse above the root then the resulting path will only contain the final path component.\n  *\n  * All empty components, e.g. \"//\", are removed.\n  * @param {string} path A path with / or \\ separators\n  * @returns {string} The path with all relative path components resolved.\n  */\n exports.resolve = function(path) {\n     var parts = path.split(\"/\");\n     var result = [];\n     for (var index = 0; index < parts.length; index++) {\n         var part = parts[index];\n         // Allow the first and last component to be empty for trailing slashes.\n         if (part === \".\" || (part === \"\" && index !== 0 && index !== parts.length - 1)) {\n             continue;\n         } else if (part === \"..\") {\n             result.pop();\n         } else {\n             result.push(part);\n         }\n     }\n     return result.join(\"/\");\n };\n\n /**\n  * Return the type of the input.\n  * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.\n  * @param {Object} input the input to identify.\n  * @return {String} the (lowercase) type of the input.\n  */\n exports.getTypeOf = function(input) {\n     if (typeof input === \"string\") {\n         return \"string\";\n     }\n     if (Object.prototype.toString.call(input) === \"[object Array]\") {\n         return \"array\";\n     }\n     if (support.nodebuffer && nodejsUtils.isBuffer(input)) {\n         return \"nodebuffer\";\n     }\n     if (support.uint8array && input instanceof Uint8Array) {\n         return \"uint8array\";\n     }\n     if (support.arraybuffer && input instanceof ArrayBuffer) {\n         return \"arraybuffer\";\n     }\n };\n\n /**\n  * Throw an exception if the type is not supported.\n  * @param {String} type the type to check.\n  * @throws {Error} an Error if the browser doesn't support the requested type.\n  */\n exports.checkSupport = function(type) {\n     var supported = support[type.toLowerCase()];\n     if (!supported) {\n         throw new Error(type + \" is not supported by this platform\");\n     }\n };\n\n exports.MAX_VALUE_16BITS = 65535;\n exports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1\n\n /**\n  * Prettify a string read as binary.\n  * @param {string} str the string to prettify.\n  * @return {string} a pretty string.\n  */\n exports.pretty = function(str) {\n     var res = \"\",\n         code, i;\n     for (i = 0; i < (str || \"\").length; i++) {\n         code = str.charCodeAt(i);\n         res += \"\\\\x\" + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n     }\n     return res;\n };\n\n /**\n  * Defer the call of a function.\n  * @param {Function} callback the function to call asynchronously.\n  * @param {Array} args the arguments to give to the callback.\n  */\n exports.delay = function(callback, args, self) {\n     setImmediate(function () {\n         callback.apply(self || null, args || []);\n     });\n };\n\n /**\n  * Extends a prototype with an other, without calling a constructor with\n  * side effects. Inspired by nodejs' `utils.inherits`\n  * @param {Function} ctor the constructor to augment\n  * @param {Function} superCtor the parent constructor to use\n  */\n exports.inherits = function (ctor, superCtor) {\n     var Obj = function() {};\n     Obj.prototype = superCtor.prototype;\n     ctor.prototype = new Obj();\n };\n\n /**\n  * Merge the objects passed as parameters into a new one.\n  * @private\n  * @param {...Object} var_args All objects to merge.\n  * @return {Object} a new object with the data of the others.\n  */\n exports.extend = function() {\n     var result = {}, i, attr;\n     for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers\n         for (attr in arguments[i]) {\n             if (Object.prototype.hasOwnProperty.call(arguments[i], attr) && typeof result[attr] === \"undefined\") {\n                 result[attr] = arguments[i][attr];\n             }\n         }\n     }\n     return result;\n };\n\n /**\n  * Transform arbitrary content into a Promise.\n  * @param {String} name a name for the content being processed.\n  * @param {Object} inputData the content to process.\n  * @param {Boolean} isBinary true if the content is not an unicode string\n  * @param {Boolean} isOptimizedBinaryString true if the string content only has one byte per character.\n  * @param {Boolean} isBase64 true if the string content is encoded with base64.\n  * @return {Promise} a promise in a format usable by JSZip.\n  */\n exports.prepareContent = function(name, inputData, isBinary, isOptimizedBinaryString, isBase64) {\n\n     // if inputData is already a promise, this flatten it.\n     var promise = external.Promise.resolve(inputData).then(function(data) {\n\n\n         var isBlob = support.blob && (data instanceof Blob || [\"[object File]\", \"[object Blob]\"].indexOf(Object.prototype.toString.call(data)) !== -1);\n\n         if (isBlob && typeof FileReader !== \"undefined\") {\n             return new external.Promise(function (resolve, reject) {\n                 var reader = new FileReader();\n\n                 reader.onload = function(e) {\n                     resolve(e.target.result);\n                 };\n                 reader.onerror = function(e) {\n                     reject(e.target.error);\n                 };\n                 reader.readAsArrayBuffer(data);\n             });\n         } else {\n             return data;\n         }\n     });\n\n     return promise.then(function(data) {\n         var dataType = exports.getTypeOf(data);\n\n         if (!dataType) {\n             return external.Promise.reject(\n                 new Error(\"Can't read the data of '\" + name + \"'. Is it \" +\n                           \"in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\")\n             );\n         }\n         // special case : it's way easier to work with Uint8Array than with ArrayBuffer\n         if (dataType === \"arraybuffer\") {\n             data = exports.transformTo(\"uint8array\", data);\n         } else if (dataType === \"string\") {\n             if (isBase64) {\n                 data = base64.decode(data);\n             }\n             else if (isBinary) {\n                 // optimizedBinaryString === true means that the file has already been filtered with a 0xFF mask\n                 if (isOptimizedBinaryString !== true) {\n                     // this is a string, not in a base64 format.\n                     // Be sure that this is a correct \"binary string\"\n                     data = string2binary(data);\n                 }\n             }\n         }\n         return data;\n     });\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_newBlob = module.exports.newBlob;\n_applyFromCharCode = module.exports.applyFromCharCode;\n_transformTo = module.exports.transformTo;\n_resolve = module.exports.resolve;\n_getTypeOf = module.exports.getTypeOf;\n_checkSupport = module.exports.checkSupport;\n_MAX_VALUE_16BITS = module.exports.MAX_VALUE_16BITS;\n_MAX_VALUE_32BITS = module.exports.MAX_VALUE_32BITS;\n_pretty = module.exports.pretty;\n_delay = module.exports.delay;\n_inherits = module.exports.inherits;\n_extend = module.exports.extend;\n_prepareContent = module.exports.prepareContent;\n\n}, () => ({\n  './support': _req,\n  './base64': _req0,\n  './nodejsUtils': _req1,\n  './external': _req2,\n  'setimmediate': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}