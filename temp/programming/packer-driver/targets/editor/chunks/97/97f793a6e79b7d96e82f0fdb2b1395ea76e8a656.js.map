{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/reader/NodeBufferReader.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","Uint8ArrayReader","utils","NodeBufferReader","data","call","inherits","prototype","readData","size","checkOffset","result","slice","zero","index","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AACA,YAAIC,gBAAgB,GAAGJ,OAAO,CAAC,oBAAD,CAA9B;;AACA,YAAIK,KAAK,GAAGL,OAAO,CAAC,UAAD,CAAnB;;AAEA,iBAASM,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5BH,UAAAA,gBAAgB,CAACI,IAAjB,CAAsB,IAAtB,EAA4BD,IAA5B;AACH;;AACDF,QAAAA,KAAK,CAACI,QAAN,CAAeH,gBAAf,EAAiCF,gBAAjC;AAEA;AACD;AACA;;AACCE,QAAAA,gBAAgB,CAACI,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,IAAT,EAAe;AACjD,eAAKC,WAAL,CAAiBD,IAAjB;AACA,cAAIE,MAAM,GAAG,KAAKP,IAAL,CAAUQ,KAAV,CAAgB,KAAKC,IAAL,GAAY,KAAKC,KAAjC,EAAwC,KAAKD,IAAL,GAAY,KAAKC,KAAjB,GAAyBL,IAAjE,CAAb;AACA,eAAKK,KAAL,IAAcL,IAAd;AACA,iBAAOE,MAAP;AACH,SALD;;AAMAb,QAAAA,MAAM,CAACF,OAAP,GAAiBO,gBAAjB,CAtB0F,CAyB3F;;AAEA,2BAAAY,WAAW,GAAGjB,MAAM,CAACF,OAArB;AAGC,OA9BD,EA8BG,OAAO;AACR,8BAAsBL,IADd;AAER,oBAAYE;AAFJ,OAAP,CA9BH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './Uint8ArrayReader';\nimport { __cjsMetaURL as _req0} from '../utils';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n var Uint8ArrayReader = require(\"./Uint8ArrayReader\");\n var utils = require(\"../utils\");\n\n function NodeBufferReader(data) {\n     Uint8ArrayReader.call(this, data);\n }\n utils.inherits(NodeBufferReader, Uint8ArrayReader);\n\n /**\n  * @see DataReader.readData\n  */\n NodeBufferReader.prototype.readData = function(size) {\n     this.checkOffset(size);\n     var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n     this.index += size;\n     return result;\n };\n module.exports = NodeBufferReader;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './Uint8ArrayReader': _req,\n  '../utils': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}