{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/utf8.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","url","define","exports","require","module","__filename","__dirname","utils","support","nodejsUtils","GenericWorker","_utf8len","Array","i","string2buf","str","buf","c","c2","m_pos","str_len","length","buf_len","charCodeAt","uint8array","Uint8Array","utf8border","max","pos","buf2string","out","c_len","len","utf16buf","subarray","applyFromCharCode","utf8encode","nodebuffer","newBufferFrom","utf8decode","transformTo","toString","Utf8DecodeWorker","call","leftOver","inherits","prototype","processChunk","chunk","data","previousData","set","concat","nextBoundary","usableData","slice","push","meta","flush","Utf8EncodeWorker","_cjsExports","_utf8encode","_utf8decode","_Utf8DecodeWorker","_Utf8EncodeWorker"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './utils';\nimport { __cjsMetaURL as _req0} from './support';\nimport { __cjsMetaURL as _req1} from './nodejsUtils';\nimport { __cjsMetaURL as _req2} from './stream/GenericWorker';\nlet _cjsExports;\nlet _utf8encode;\nlet _utf8decode;\nlet _Utf8DecodeWorker;\nlet _Utf8EncodeWorker;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var utils = require(\"./utils\");\n var support = require(\"./support\");\n var nodejsUtils = require(\"./nodejsUtils\");\n var GenericWorker = require(\"./stream/GenericWorker\");\n\n /**\n  * The following functions come from pako, from pako/lib/utils/strings\n  * released under the MIT license, see pako https://github.com/nodeca/pako/\n  */\n\n // Table with utf8 lengths (calculated by first byte of sequence)\n // Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n // because max possible codepoint is 0x10ffff\n var _utf8len = new Array(256);\n for (var i=0; i<256; i++) {\n     _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);\n }\n _utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n // convert string to array (typed, when possible)\n var string2buf = function (str) {\n     var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n     // count binary size\n     for (m_pos = 0; m_pos < str_len; m_pos++) {\n         c = str.charCodeAt(m_pos);\n         if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n             c2 = str.charCodeAt(m_pos+1);\n             if ((c2 & 0xfc00) === 0xdc00) {\n                 c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n                 m_pos++;\n             }\n         }\n         buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n     }\n\n     // allocate buffer\n     if (support.uint8array) {\n         buf = new Uint8Array(buf_len);\n     } else {\n         buf = new Array(buf_len);\n     }\n\n     // convert\n     for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n         c = str.charCodeAt(m_pos);\n         if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n             c2 = str.charCodeAt(m_pos+1);\n             if ((c2 & 0xfc00) === 0xdc00) {\n                 c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n                 m_pos++;\n             }\n         }\n         if (c < 0x80) {\n             /* one byte */\n             buf[i++] = c;\n         } else if (c < 0x800) {\n             /* two bytes */\n             buf[i++] = 0xC0 | (c >>> 6);\n             buf[i++] = 0x80 | (c & 0x3f);\n         } else if (c < 0x10000) {\n             /* three bytes */\n             buf[i++] = 0xE0 | (c >>> 12);\n             buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n             buf[i++] = 0x80 | (c & 0x3f);\n         } else {\n             /* four bytes */\n             buf[i++] = 0xf0 | (c >>> 18);\n             buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n             buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n             buf[i++] = 0x80 | (c & 0x3f);\n         }\n     }\n\n     return buf;\n };\n\n // Calculate max possible position in utf8 buffer,\n // that will not break sequence. If that's not possible\n // - (very small limits) return max size as is.\n //\n // buf[] - utf8 bytes array\n // max   - length limit (mandatory);\n var utf8border = function(buf, max) {\n     var pos;\n\n     max = max || buf.length;\n     if (max > buf.length) { max = buf.length; }\n\n     // go back from last position, until start of sequence found\n     pos = max-1;\n     while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n     // Fuckup - very small and broken sequence,\n     // return max, because we should return something anyway.\n     if (pos < 0) { return max; }\n\n     // If we came to start of buffer - that means vuffer is too small,\n     // return max too.\n     if (pos === 0) { return max; }\n\n     return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n };\n\n // convert array to string\n var buf2string = function (buf) {\n     var i, out, c, c_len;\n     var len = buf.length;\n\n     // Reserve max possible length (2 words per char)\n     // NB: by unknown reasons, Array is significantly faster for\n     //     String.fromCharCode.apply than Uint16Array.\n     var utf16buf = new Array(len*2);\n\n     for (out=0, i=0; i<len;) {\n         c = buf[i++];\n         // quick process ascii\n         if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n         c_len = _utf8len[c];\n         // skip 5 & 6 byte codes\n         if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n         // apply mask on first byte\n         c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n         // join the rest\n         while (c_len > 1 && i < len) {\n             c = (c << 6) | (buf[i++] & 0x3f);\n             c_len--;\n         }\n\n         // terminated by end of string?\n         if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n         if (c < 0x10000) {\n             utf16buf[out++] = c;\n         } else {\n             c -= 0x10000;\n             utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n             utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n         }\n     }\n\n     // shrinkBuf(utf16buf, out)\n     if (utf16buf.length !== out) {\n         if(utf16buf.subarray) {\n             utf16buf = utf16buf.subarray(0, out);\n         } else {\n             utf16buf.length = out;\n         }\n     }\n\n     // return String.fromCharCode.apply(null, utf16buf);\n     return utils.applyFromCharCode(utf16buf);\n };\n\n\n // That's all for the pako functions.\n\n\n /**\n  * Transform a javascript string into an array (typed if possible) of bytes,\n  * UTF-8 encoded.\n  * @param {String} str the string to encode\n  * @return {Array|Uint8Array|Buffer} the UTF-8 encoded string.\n  */\n exports.utf8encode = function utf8encode(str) {\n     if (support.nodebuffer) {\n         return nodejsUtils.newBufferFrom(str, \"utf-8\");\n     }\n\n     return string2buf(str);\n };\n\n\n /**\n  * Transform a bytes array (or a representation) representing an UTF-8 encoded\n  * string into a javascript string.\n  * @param {Array|Uint8Array|Buffer} buf the data de decode\n  * @return {String} the decoded string.\n  */\n exports.utf8decode = function utf8decode(buf) {\n     if (support.nodebuffer) {\n         return utils.transformTo(\"nodebuffer\", buf).toString(\"utf-8\");\n     }\n\n     buf = utils.transformTo(support.uint8array ? \"uint8array\" : \"array\", buf);\n\n     return buf2string(buf);\n };\n\n /**\n  * A worker to decode utf8 encoded binary chunks into string chunks.\n  * @constructor\n  */\n function Utf8DecodeWorker() {\n     GenericWorker.call(this, \"utf-8 decode\");\n     // the last bytes if a chunk didn't end with a complete codepoint.\n     this.leftOver = null;\n }\n utils.inherits(Utf8DecodeWorker, GenericWorker);\n\n /**\n  * @see GenericWorker.processChunk\n  */\n Utf8DecodeWorker.prototype.processChunk = function (chunk) {\n\n     var data = utils.transformTo(support.uint8array ? \"uint8array\" : \"array\", chunk.data);\n\n     // 1st step, re-use what's left of the previous chunk\n     if (this.leftOver && this.leftOver.length) {\n         if(support.uint8array) {\n             var previousData = data;\n             data = new Uint8Array(previousData.length + this.leftOver.length);\n             data.set(this.leftOver, 0);\n             data.set(previousData, this.leftOver.length);\n         } else {\n             data = this.leftOver.concat(data);\n         }\n         this.leftOver = null;\n     }\n\n     var nextBoundary = utf8border(data);\n     var usableData = data;\n     if (nextBoundary !== data.length) {\n         if (support.uint8array) {\n             usableData = data.subarray(0, nextBoundary);\n             this.leftOver = data.subarray(nextBoundary, data.length);\n         } else {\n             usableData = data.slice(0, nextBoundary);\n             this.leftOver = data.slice(nextBoundary, data.length);\n         }\n     }\n\n     this.push({\n         data : exports.utf8decode(usableData),\n         meta : chunk.meta\n     });\n };\n\n /**\n  * @see GenericWorker.flush\n  */\n Utf8DecodeWorker.prototype.flush = function () {\n     if(this.leftOver && this.leftOver.length) {\n         this.push({\n             data : exports.utf8decode(this.leftOver),\n             meta : {}\n         });\n         this.leftOver = null;\n     }\n };\n exports.Utf8DecodeWorker = Utf8DecodeWorker;\n\n /**\n  * A worker to endcode string chunks into utf8 encoded binary chunks.\n  * @constructor\n  */\n function Utf8EncodeWorker() {\n     GenericWorker.call(this, \"utf-8 encode\");\n }\n utils.inherits(Utf8EncodeWorker, GenericWorker);\n\n /**\n  * @see GenericWorker.processChunk\n  */\n Utf8EncodeWorker.prototype.processChunk = function (chunk) {\n     this.push({\n         data : exports.utf8encode(chunk.data),\n         meta : chunk.meta\n     });\n };\n exports.Utf8EncodeWorker = Utf8EncodeWorker;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_utf8encode = module.exports.utf8encode;\n_utf8decode = module.exports.utf8decode;\n_Utf8DecodeWorker = module.exports.Utf8DecodeWorker;\n_Utf8EncodeWorker = module.exports.Utf8EncodeWorker;\n\n}, () => ({\n  './utils': _req,\n  './support': _req0,\n  './nodejsUtils': _req1,\n  './stream/GenericWorker': _req2,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}