{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/zipObject.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","StreamHelper","DataWorker","utf8","CompressedObject","GenericWorker","ZipObject","name","data","options","dir","date","comment","unixPermissions","dosPermissions","_data","_dataBinary","binary","compression","compressionOptions","prototype","internalStream","type","result","outputType","Error","toLowerCase","askUnicodeString","_decompressWorker","isUnicodeString","pipe","Utf8EncodeWorker","Utf8DecodeWorker","e","error","async","onUpdate","accumulate","nodeStream","toNodejsStream","_compressWorker","magic","getCompressedWorker","createWorkerFrom","getContentWorker","removedMethods","removedFn","i","length","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './stream/StreamHelper';\nimport { __cjsMetaURL as _req0} from './stream/DataWorker';\nimport { __cjsMetaURL as _req1} from './utf8';\nimport { __cjsMetaURL as _req2} from './compressedObject';\nimport { __cjsMetaURL as _req3} from './stream/GenericWorker';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var StreamHelper = require(\"./stream/StreamHelper\");\n var DataWorker = require(\"./stream/DataWorker\");\n var utf8 = require(\"./utf8\");\n var CompressedObject = require(\"./compressedObject\");\n var GenericWorker = require(\"./stream/GenericWorker\");\n\n /**\n  * A simple object representing a file in the zip file.\n  * @constructor\n  * @param {string} name the name of the file\n  * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data\n  * @param {Object} options the options of the file\n  */\n var ZipObject = function(name, data, options) {\n     this.name = name;\n     this.dir = options.dir;\n     this.date = options.date;\n     this.comment = options.comment;\n     this.unixPermissions = options.unixPermissions;\n     this.dosPermissions = options.dosPermissions;\n\n     this._data = data;\n     this._dataBinary = options.binary;\n     // keep only the compression\n     this.options = {\n         compression : options.compression,\n         compressionOptions : options.compressionOptions\n     };\n };\n\n ZipObject.prototype = {\n     /**\n      * Create an internal stream for the content of this object.\n      * @param {String} type the type of each chunk.\n      * @return StreamHelper the stream.\n      */\n     internalStream: function (type) {\n         var result = null, outputType = \"string\";\n         try {\n             if (!type) {\n                 throw new Error(\"No output type specified.\");\n             }\n             outputType = type.toLowerCase();\n             var askUnicodeString = outputType === \"string\" || outputType === \"text\";\n             if (outputType === \"binarystring\" || outputType === \"text\") {\n                 outputType = \"string\";\n             }\n             result = this._decompressWorker();\n\n             var isUnicodeString = !this._dataBinary;\n\n             if (isUnicodeString && !askUnicodeString) {\n                 result = result.pipe(new utf8.Utf8EncodeWorker());\n             }\n             if (!isUnicodeString && askUnicodeString) {\n                 result = result.pipe(new utf8.Utf8DecodeWorker());\n             }\n         } catch (e) {\n             result = new GenericWorker(\"error\");\n             result.error(e);\n         }\n\n         return new StreamHelper(result, outputType, \"\");\n     },\n\n     /**\n      * Prepare the content in the asked type.\n      * @param {String} type the type of the result.\n      * @param {Function} onUpdate a function to call on each internal update.\n      * @return Promise the promise of the result.\n      */\n     async: function (type, onUpdate) {\n         return this.internalStream(type).accumulate(onUpdate);\n     },\n\n     /**\n      * Prepare the content as a nodejs stream.\n      * @param {String} type the type of each chunk.\n      * @param {Function} onUpdate a function to call on each internal update.\n      * @return Stream the stream.\n      */\n     nodeStream: function (type, onUpdate) {\n         return this.internalStream(type || \"nodebuffer\").toNodejsStream(onUpdate);\n     },\n\n     /**\n      * Return a worker for the compressed content.\n      * @private\n      * @param {Object} compression the compression object to use.\n      * @param {Object} compressionOptions the options to use when compressing.\n      * @return Worker the worker.\n      */\n     _compressWorker: function (compression, compressionOptions) {\n         if (\n             this._data instanceof CompressedObject &&\n             this._data.compression.magic === compression.magic\n         ) {\n             return this._data.getCompressedWorker();\n         } else {\n             var result = this._decompressWorker();\n             if(!this._dataBinary) {\n                 result = result.pipe(new utf8.Utf8EncodeWorker());\n             }\n             return CompressedObject.createWorkerFrom(result, compression, compressionOptions);\n         }\n     },\n     /**\n      * Return a worker for the decompressed content.\n      * @private\n      * @return Worker the worker.\n      */\n     _decompressWorker : function () {\n         if (this._data instanceof CompressedObject) {\n             return this._data.getContentWorker();\n         } else if (this._data instanceof GenericWorker) {\n             return this._data;\n         } else {\n             return new DataWorker(this._data);\n         }\n     }\n };\n\n var removedMethods = [\"asText\", \"asBinary\", \"asNodeBuffer\", \"asUint8Array\", \"asArrayBuffer\"];\n var removedFn = function () {\n     throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n };\n\n for(var i = 0; i < removedMethods.length; i++) {\n     ZipObject.prototype[removedMethods[i]] = removedFn;\n }\n module.exports = ZipObject;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './stream/StreamHelper': _req,\n  './stream/DataWorker': _req0,\n  './utf8': _req1,\n  './compressedObject': _req2,\n  './stream/GenericWorker': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}