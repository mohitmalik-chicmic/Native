{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/flate.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","USE_TYPEDARRAY","Uint8Array","Uint16Array","Uint32Array","pako","utils","GenericWorker","ARRAY_TYPE","magic","FlateWorker","action","options","call","_pako","_pakoAction","_pakoOptions","meta","inherits","prototype","processChunk","chunk","_createPako","push","transformTo","data","flush","cleanUp","raw","level","self","onData","compressWorker","compressionOptions","uncompressWorker","_cjsExports","_magic","_compressWorker","_uncompressWorker"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'pako';\nimport { __cjsMetaURL as _req0} from './utils';\nimport { __cjsMetaURL as _req1} from './stream/GenericWorker';\nlet _cjsExports;\nlet _magic;\nlet _compressWorker;\nlet _uncompressWorker;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n var USE_TYPEDARRAY = (typeof Uint8Array !== \"undefined\") && (typeof Uint16Array !== \"undefined\") && (typeof Uint32Array !== \"undefined\");\n\n var pako = require(\"pako\");\n var utils = require(\"./utils\");\n var GenericWorker = require(\"./stream/GenericWorker\");\n\n var ARRAY_TYPE = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\n exports.magic = \"\\x08\\x00\";\n\n /**\n  * Create a worker that uses pako to inflate/deflate.\n  * @constructor\n  * @param {String} action the name of the pako function to call : either \"Deflate\" or \"Inflate\".\n  * @param {Object} options the options to use when (de)compressing.\n  */\n function FlateWorker(action, options) {\n     GenericWorker.call(this, \"FlateWorker/\" + action);\n\n     this._pako = null;\n     this._pakoAction = action;\n     this._pakoOptions = options;\n     // the `meta` object from the last chunk received\n     // this allow this worker to pass around metadata\n     this.meta = {};\n }\n\n utils.inherits(FlateWorker, GenericWorker);\n\n /**\n  * @see GenericWorker.processChunk\n  */\n FlateWorker.prototype.processChunk = function (chunk) {\n     this.meta = chunk.meta;\n     if (this._pako === null) {\n         this._createPako();\n     }\n     this._pako.push(utils.transformTo(ARRAY_TYPE, chunk.data), false);\n };\n\n /**\n  * @see GenericWorker.flush\n  */\n FlateWorker.prototype.flush = function () {\n     GenericWorker.prototype.flush.call(this);\n     if (this._pako === null) {\n         this._createPako();\n     }\n     this._pako.push([], true);\n };\n /**\n  * @see GenericWorker.cleanUp\n  */\n FlateWorker.prototype.cleanUp = function () {\n     GenericWorker.prototype.cleanUp.call(this);\n     this._pako = null;\n };\n\n /**\n  * Create the _pako object.\n  * TODO: lazy-loading this object isn't the best solution but it's the\n  * quickest. The best solution is to lazy-load the worker list. See also the\n  * issue #446.\n  */\n FlateWorker.prototype._createPako = function () {\n     this._pako = new pako[this._pakoAction]({\n         raw: true,\n         level: this._pakoOptions.level || -1 // default compression\n     });\n     var self = this;\n     this._pako.onData = function(data) {\n         self.push({\n             data : data,\n             meta : self.meta\n         });\n     };\n };\n\n exports.compressWorker = function (compressionOptions) {\n     return new FlateWorker(\"Deflate\", compressionOptions);\n };\n exports.uncompressWorker = function () {\n     return new FlateWorker(\"Inflate\", {});\n };\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_magic = module.exports.magic;\n_compressWorker = module.exports.compressWorker;\n_uncompressWorker = module.exports.uncompressWorker;\n\n}, () => ({\n  'pako': _req,\n  './utils': _req0,\n  './stream/GenericWorker': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}