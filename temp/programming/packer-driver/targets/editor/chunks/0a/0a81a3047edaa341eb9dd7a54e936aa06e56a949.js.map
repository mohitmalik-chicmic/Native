{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/stream/DataWorker.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","utils","GenericWorker","DEFAULT_BLOCK_SIZE","DataWorker","dataP","call","self","dataIsReady","index","max","data","type","_tickScheduled","then","length","getTypeOf","isPaused","_tickAndRepeat","e","error","inherits","prototype","cleanUp","resume","delay","isFinished","_tick","size","nextIndex","Math","min","end","substring","subarray","slice","push","meta","percent","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AAEA,YAAIC,KAAK,GAAGJ,OAAO,CAAC,UAAD,CAAnB;;AACA,YAAIK,aAAa,GAAGL,OAAO,CAAC,iBAAD,CAA3B,CAP0F,CAS1F;AACA;;;AACA,YAAIM,kBAAkB,GAAG,KAAK,IAA9B;AAEA;AACD;AACA;AACA;AACA;;AACC,iBAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvBH,UAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyB,YAAzB;AACA,cAAIC,IAAI,GAAG,IAAX;AACA,eAAKC,WAAL,GAAmB,KAAnB;AACA,eAAKC,KAAL,GAAa,CAAb;AACA,eAAKC,GAAL,GAAW,CAAX;AACA,eAAKC,IAAL,GAAY,IAAZ;AACA,eAAKC,IAAL,GAAY,EAAZ;AAEA,eAAKC,cAAL,GAAsB,KAAtB;AAEAR,UAAAA,KAAK,CAACS,IAAN,CAAW,UAAUH,IAAV,EAAgB;AACvBJ,YAAAA,IAAI,CAACC,WAAL,GAAmB,IAAnB;AACAD,YAAAA,IAAI,CAACI,IAAL,GAAYA,IAAZ;AACAJ,YAAAA,IAAI,CAACG,GAAL,GAAWC,IAAI,IAAIA,IAAI,CAACI,MAAb,IAAuB,CAAlC;AACAR,YAAAA,IAAI,CAACK,IAAL,GAAYX,KAAK,CAACe,SAAN,CAAgBL,IAAhB,CAAZ;;AACA,gBAAG,CAACJ,IAAI,CAACU,QAAT,EAAmB;AACfV,cAAAA,IAAI,CAACW,cAAL;AACH;AACJ,WARD,EAQG,UAAUC,CAAV,EAAa;AACZZ,YAAAA,IAAI,CAACa,KAAL,CAAWD,CAAX;AACH,WAVD;AAWH;;AAEDlB,QAAAA,KAAK,CAACoB,QAAN,CAAejB,UAAf,EAA2BF,aAA3B;AAEA;AACD;AACA;;AACCE,QAAAA,UAAU,CAACkB,SAAX,CAAqBC,OAArB,GAA+B,YAAY;AACvCrB,UAAAA,aAAa,CAACoB,SAAd,CAAwBC,OAAxB,CAAgCjB,IAAhC,CAAqC,IAArC;AACA,eAAKK,IAAL,GAAY,IAAZ;AACH,SAHD;AAKA;AACD;AACA;;;AACCP,QAAAA,UAAU,CAACkB,SAAX,CAAqBE,MAArB,GAA8B,YAAY;AACtC,cAAG,CAACtB,aAAa,CAACoB,SAAd,CAAwBE,MAAxB,CAA+BlB,IAA/B,CAAoC,IAApC,CAAJ,EAA+C;AAC3C,mBAAO,KAAP;AACH;;AAED,cAAI,CAAC,KAAKO,cAAN,IAAwB,KAAKL,WAAjC,EAA8C;AAC1C,iBAAKK,cAAL,GAAsB,IAAtB;AACAZ,YAAAA,KAAK,CAACwB,KAAN,CAAY,KAAKP,cAAjB,EAAiC,EAAjC,EAAqC,IAArC;AACH;;AACD,iBAAO,IAAP;AACH,SAVD;AAYA;AACD;AACA;;;AACCd,QAAAA,UAAU,CAACkB,SAAX,CAAqBJ,cAArB,GAAsC,YAAW;AAC7C,eAAKL,cAAL,GAAsB,KAAtB;;AACA,cAAG,KAAKI,QAAL,IAAiB,KAAKS,UAAzB,EAAqC;AACjC;AACH;;AACD,eAAKC,KAAL;;AACA,cAAG,CAAC,KAAKD,UAAT,EAAqB;AACjBzB,YAAAA,KAAK,CAACwB,KAAN,CAAY,KAAKP,cAAjB,EAAiC,EAAjC,EAAqC,IAArC;AACA,iBAAKL,cAAL,GAAsB,IAAtB;AACH;AACJ,SAVD;AAYA;AACD;AACA;;;AACCT,QAAAA,UAAU,CAACkB,SAAX,CAAqBK,KAArB,GAA6B,YAAW;AAEpC,cAAG,KAAKV,QAAL,IAAiB,KAAKS,UAAzB,EAAqC;AACjC,mBAAO,KAAP;AACH;;AAED,cAAIE,IAAI,GAAGzB,kBAAX;AACA,cAAIQ,IAAI,GAAG,IAAX;AAAA,cAAiBkB,SAAS,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKrB,GAAd,EAAmB,KAAKD,KAAL,GAAamB,IAAhC,CAA7B;;AACA,cAAI,KAAKnB,KAAL,IAAc,KAAKC,GAAvB,EAA4B;AACxB;AACA,mBAAO,KAAKsB,GAAL,EAAP;AACH,WAHD,MAGO;AACH,oBAAO,KAAKpB,IAAZ;AACA,mBAAK,QAAL;AACID,gBAAAA,IAAI,GAAG,KAAKA,IAAL,CAAUsB,SAAV,CAAoB,KAAKxB,KAAzB,EAAgCoB,SAAhC,CAAP;AACA;;AACJ,mBAAK,YAAL;AACIlB,gBAAAA,IAAI,GAAG,KAAKA,IAAL,CAAUuB,QAAV,CAAmB,KAAKzB,KAAxB,EAA+BoB,SAA/B,CAAP;AACA;;AACJ,mBAAK,OAAL;AACA,mBAAK,YAAL;AACIlB,gBAAAA,IAAI,GAAG,KAAKA,IAAL,CAAUwB,KAAV,CAAgB,KAAK1B,KAArB,EAA4BoB,SAA5B,CAAP;AACA;AAVJ;;AAYA,iBAAKpB,KAAL,GAAaoB,SAAb;AACA,mBAAO,KAAKO,IAAL,CAAU;AACbzB,cAAAA,IAAI,EAAGA,IADM;AAEb0B,cAAAA,IAAI,EAAG;AACHC,gBAAAA,OAAO,EAAG,KAAK5B,GAAL,GAAW,KAAKD,KAAL,GAAa,KAAKC,GAAlB,GAAwB,GAAnC,GAAyC;AADhD;AAFM,aAAV,CAAP;AAMH;AACJ,SAhCD;;AAkCAZ,QAAAA,MAAM,CAACF,OAAP,GAAiBQ,UAAjB,CAvH0F,CA0H3F;;AAEA,2BAAAmC,WAAW,GAAGzC,MAAM,CAACF,OAArB;AAGC,OA/HD,EA+HG,OAAO;AACR,oBAAYL,IADJ;AAER,2BAAmBE;AAFX,OAAP,CA/HH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../utils';\nimport { __cjsMetaURL as _req0} from './GenericWorker';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var utils = require(\"../utils\");\n var GenericWorker = require(\"./GenericWorker\");\n\n // the size of the generated chunks\n // TODO expose this as a public variable\n var DEFAULT_BLOCK_SIZE = 16 * 1024;\n\n /**\n  * A worker that reads a content and emits chunks.\n  * @constructor\n  * @param {Promise} dataP the promise of the data to split\n  */\n function DataWorker(dataP) {\n     GenericWorker.call(this, \"DataWorker\");\n     var self = this;\n     this.dataIsReady = false;\n     this.index = 0;\n     this.max = 0;\n     this.data = null;\n     this.type = \"\";\n\n     this._tickScheduled = false;\n\n     dataP.then(function (data) {\n         self.dataIsReady = true;\n         self.data = data;\n         self.max = data && data.length || 0;\n         self.type = utils.getTypeOf(data);\n         if(!self.isPaused) {\n             self._tickAndRepeat();\n         }\n     }, function (e) {\n         self.error(e);\n     });\n }\n\n utils.inherits(DataWorker, GenericWorker);\n\n /**\n  * @see GenericWorker.cleanUp\n  */\n DataWorker.prototype.cleanUp = function () {\n     GenericWorker.prototype.cleanUp.call(this);\n     this.data = null;\n };\n\n /**\n  * @see GenericWorker.resume\n  */\n DataWorker.prototype.resume = function () {\n     if(!GenericWorker.prototype.resume.call(this)) {\n         return false;\n     }\n\n     if (!this._tickScheduled && this.dataIsReady) {\n         this._tickScheduled = true;\n         utils.delay(this._tickAndRepeat, [], this);\n     }\n     return true;\n };\n\n /**\n  * Trigger a tick a schedule an other call to this function.\n  */\n DataWorker.prototype._tickAndRepeat = function() {\n     this._tickScheduled = false;\n     if(this.isPaused || this.isFinished) {\n         return;\n     }\n     this._tick();\n     if(!this.isFinished) {\n         utils.delay(this._tickAndRepeat, [], this);\n         this._tickScheduled = true;\n     }\n };\n\n /**\n  * Read and push a chunk.\n  */\n DataWorker.prototype._tick = function() {\n\n     if(this.isPaused || this.isFinished) {\n         return false;\n     }\n\n     var size = DEFAULT_BLOCK_SIZE;\n     var data = null, nextIndex = Math.min(this.max, this.index + size);\n     if (this.index >= this.max) {\n         // EOF\n         return this.end();\n     } else {\n         switch(this.type) {\n         case \"string\":\n             data = this.data.substring(this.index, nextIndex);\n             break;\n         case \"uint8array\":\n             data = this.data.subarray(this.index, nextIndex);\n             break;\n         case \"array\":\n         case \"nodebuffer\":\n             data = this.data.slice(this.index, nextIndex);\n             break;\n         }\n         this.index = nextIndex;\n         return this.push({\n             data : data,\n             meta : {\n                 percent : this.max ? this.index / this.max * 100 : 0\n             }\n         });\n     }\n };\n\n module.exports = DataWorker;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../utils': _req,\n  './GenericWorker': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}