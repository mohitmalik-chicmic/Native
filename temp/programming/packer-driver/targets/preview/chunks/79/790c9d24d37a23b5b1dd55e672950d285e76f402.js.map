{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/reader/DataReader.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","utils","DataReader","data","length","index","zero","prototype","checkOffset","offset","checkIndex","newIndex","Error","setIndex","skip","n","byteAt","readInt","size","result","i","readString","transformTo","readData","lastIndexOfSignature","readAndCheckSignature","readDate","dostime","Date","UTC","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../utils';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n var utils = require(\"../utils\");\n\n function DataReader(data) {\n     this.data = data; // type : see implementation\n     this.length = data.length;\n     this.index = 0;\n     this.zero = 0;\n }\n DataReader.prototype = {\n     /**\n      * Check that the offset will not go too far.\n      * @param {string} offset the additional offset to check.\n      * @throws {Error} an Error if the offset is out of bounds.\n      */\n     checkOffset: function(offset) {\n         this.checkIndex(this.index + offset);\n     },\n     /**\n      * Check that the specified index will not be too far.\n      * @param {string} newIndex the index to check.\n      * @throws {Error} an Error if the index is out of bounds.\n      */\n     checkIndex: function(newIndex) {\n         if (this.length < this.zero + newIndex || newIndex < 0) {\n             throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n         }\n     },\n     /**\n      * Change the index.\n      * @param {number} newIndex The new index.\n      * @throws {Error} if the new index is out of the data.\n      */\n     setIndex: function(newIndex) {\n         this.checkIndex(newIndex);\n         this.index = newIndex;\n     },\n     /**\n      * Skip the next n bytes.\n      * @param {number} n the number of bytes to skip.\n      * @throws {Error} if the new index is out of the data.\n      */\n     skip: function(n) {\n         this.setIndex(this.index + n);\n     },\n     /**\n      * Get the byte at the specified index.\n      * @param {number} i the index to use.\n      * @return {number} a byte.\n      */\n     byteAt: function() {\n         // see implementations\n     },\n     /**\n      * Get the next number with a given byte size.\n      * @param {number} size the number of bytes to read.\n      * @return {number} the corresponding number.\n      */\n     readInt: function(size) {\n         var result = 0,\n             i;\n         this.checkOffset(size);\n         for (i = this.index + size - 1; i >= this.index; i--) {\n             result = (result << 8) + this.byteAt(i);\n         }\n         this.index += size;\n         return result;\n     },\n     /**\n      * Get the next string with a given byte size.\n      * @param {number} size the number of bytes to read.\n      * @return {string} the corresponding string.\n      */\n     readString: function(size) {\n         return utils.transformTo(\"string\", this.readData(size));\n     },\n     /**\n      * Get raw data without conversion, <size> bytes.\n      * @param {number} size the number of bytes to read.\n      * @return {Object} the raw data, implementation specific.\n      */\n     readData: function() {\n         // see implementations\n     },\n     /**\n      * Find the last occurrence of a zip signature (4 bytes).\n      * @param {string} sig the signature to find.\n      * @return {number} the index of the last occurrence, -1 if not found.\n      */\n     lastIndexOfSignature: function() {\n         // see implementations\n     },\n     /**\n      * Read the signature (4 bytes) at the current position and compare it with sig.\n      * @param {string} sig the expected signature\n      * @return {boolean} true if the signature matches, false otherwise.\n      */\n     readAndCheckSignature: function() {\n         // see implementations\n     },\n     /**\n      * Get the next date.\n      * @return {Date} the date.\n      */\n     readDate: function() {\n         var dostime = this.readInt(4);\n         return new Date(Date.UTC(\n             ((dostime >> 25) & 0x7f) + 1980, // year\n             ((dostime >> 21) & 0x0f) - 1, // month\n             (dostime >> 16) & 0x1f, // day\n             (dostime >> 11) & 0x1f, // hour\n             (dostime >> 5) & 0x3f, // minute\n             (dostime & 0x1f) << 1)); // second\n     }\n };\n module.exports = DataReader;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../utils': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}