{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/reader/Uint8ArrayReader.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","ArrayReader","utils","Uint8ArrayReader","data","call","inherits","prototype","readData","size","checkOffset","Uint8Array","result","subarray","zero","index","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AACA,YAAIC,WAAW,GAAGJ,OAAO,CAAC,eAAD,CAAzB;;AACA,YAAIK,KAAK,GAAGL,OAAO,CAAC,UAAD,CAAnB;;AAEA,iBAASM,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5BH,UAAAA,WAAW,CAACI,IAAZ,CAAiB,IAAjB,EAAuBD,IAAvB;AACH;;AACDF,QAAAA,KAAK,CAACI,QAAN,CAAeH,gBAAf,EAAiCF,WAAjC;AACA;AACD;AACA;;AACCE,QAAAA,gBAAgB,CAACI,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,IAAT,EAAe;AACjD,eAAKC,WAAL,CAAiBD,IAAjB;;AACA,cAAGA,IAAI,KAAK,CAAZ,EAAe;AACX;AACA,mBAAO,IAAIE,UAAJ,CAAe,CAAf,CAAP;AACH;;AACD,cAAIC,MAAM,GAAG,KAAKR,IAAL,CAAUS,QAAV,CAAmB,KAAKC,IAAL,GAAY,KAAKC,KAApC,EAA2C,KAAKD,IAAL,GAAY,KAAKC,KAAjB,GAAyBN,IAApE,CAAb;AACA,eAAKM,KAAL,IAAcN,IAAd;AACA,iBAAOG,MAAP;AACH,SATD;;AAUAd,QAAAA,MAAM,CAACF,OAAP,GAAiBO,gBAAjB,CAzB0F,CA4B3F;;AAEA,2BAAAa,WAAW,GAAGlB,MAAM,CAACF,OAArB;AAGC,OAjCD,EAiCG,OAAO;AACR,yBAAiBL,IADT;AAER,oBAAYE;AAFJ,OAAP,CAjCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './ArrayReader';\nimport { __cjsMetaURL as _req0} from '../utils';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n var ArrayReader = require(\"./ArrayReader\");\n var utils = require(\"../utils\");\n\n function Uint8ArrayReader(data) {\n     ArrayReader.call(this, data);\n }\n utils.inherits(Uint8ArrayReader, ArrayReader);\n /**\n  * @see DataReader.readData\n  */\n Uint8ArrayReader.prototype.readData = function(size) {\n     this.checkOffset(size);\n     if(size === 0) {\n         // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n         return new Uint8Array(0);\n     }\n     var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n     this.index += size;\n     return result;\n };\n module.exports = Uint8ArrayReader;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './ArrayReader': _req,\n  '../utils': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}