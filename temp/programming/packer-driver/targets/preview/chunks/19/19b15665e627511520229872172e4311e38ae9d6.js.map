{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/stream/DataLengthProbe.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","utils","GenericWorker","DataLengthProbe","propName","call","withStreamInfo","inherits","prototype","processChunk","chunk","length","streamInfo","data","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AAEA,YAAIC,KAAK,GAAGJ,OAAO,CAAC,UAAD,CAAnB;;AACA,YAAIK,aAAa,GAAGL,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACD;AACA;AACA;AACA;;;AACC,iBAASM,eAAT,CAAyBC,QAAzB,EAAmC;AAC/BF,UAAAA,aAAa,CAACG,IAAd,CAAmB,IAAnB,EAAyB,yBAAyBD,QAAlD;AACA,eAAKA,QAAL,GAAgBA,QAAhB;AACA,eAAKE,cAAL,CAAoBF,QAApB,EAA8B,CAA9B;AACH;;AACDH,QAAAA,KAAK,CAACM,QAAN,CAAeJ,eAAf,EAAgCD,aAAhC;AAEA;AACD;AACA;;AACCC,QAAAA,eAAe,CAACK,SAAhB,CAA0BC,YAA1B,GAAyC,UAAUC,KAAV,EAAiB;AACtD,cAAGA,KAAH,EAAU;AACN,gBAAIC,MAAM,GAAG,KAAKC,UAAL,CAAgB,KAAKR,QAArB,KAAkC,CAA/C;AACA,iBAAKQ,UAAL,CAAgB,KAAKR,QAArB,IAAiCO,MAAM,GAAGD,KAAK,CAACG,IAAN,CAAWF,MAArD;AACH;;AACDT,UAAAA,aAAa,CAACM,SAAd,CAAwBC,YAAxB,CAAqCJ,IAArC,CAA0C,IAA1C,EAAgDK,KAAhD;AACH,SAND;;AAOAZ,QAAAA,MAAM,CAACF,OAAP,GAAiBO,eAAjB,CA/B0F,CAmC3F;;AAEA,2BAAAW,WAAW,GAAGhB,MAAM,CAACF,OAArB;AAGC,OAxCD,EAwCG,OAAO;AACR,oBAAYL,IADJ;AAER,2BAAmBE;AAFX,OAAP,CAxCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../utils';\nimport { __cjsMetaURL as _req0} from './GenericWorker';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var utils = require(\"../utils\");\n var GenericWorker = require(\"./GenericWorker\");\n\n /**\n  * A worker which calculate the total length of the data flowing through.\n  * @constructor\n  * @param {String} propName the name used to expose the length\n  */\n function DataLengthProbe(propName) {\n     GenericWorker.call(this, \"DataLengthProbe for \" + propName);\n     this.propName = propName;\n     this.withStreamInfo(propName, 0);\n }\n utils.inherits(DataLengthProbe, GenericWorker);\n\n /**\n  * @see GenericWorker.processChunk\n  */\n DataLengthProbe.prototype.processChunk = function (chunk) {\n     if(chunk) {\n         var length = this.streamInfo[this.propName] || 0;\n         this.streamInfo[this.propName] = length + chunk.data.length;\n     }\n     GenericWorker.prototype.processChunk.call(this, chunk);\n };\n module.exports = DataLengthProbe;\n\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../utils': _req,\n  './GenericWorker': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}