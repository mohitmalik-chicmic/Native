{"version":3,"sources":["file:///Users/chicmic/Documents/InhouseCOCOS/ZipExtractor/node_modules/jszip/lib/nodejs/NodejsStreamInputAdapter.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","utils","GenericWorker","NodejsStreamInputAdapter","filename","stream","call","_upstreamEnded","_bindStream","inherits","prototype","self","_stream","pause","on","chunk","push","data","meta","percent","e","isPaused","generatedError","error","end","resume","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AAEA,YAAIC,KAAK,GAAGJ,OAAO,CAAC,UAAD,CAAnB;;AACA,YAAIK,aAAa,GAAGL,OAAO,CAAC,yBAAD,CAA3B;AAEA;AACD;AACA;AACA;AACA;AACA;;;AACC,iBAASM,wBAAT,CAAkCC,QAAlC,EAA4CC,MAA5C,EAAoD;AAChDH,UAAAA,aAAa,CAACI,IAAd,CAAmB,IAAnB,EAAyB,qCAAqCF,QAA9D;AACA,eAAKG,cAAL,GAAsB,KAAtB;;AACA,eAAKC,WAAL,CAAiBH,MAAjB;AACH;;AAEDJ,QAAAA,KAAK,CAACQ,QAAN,CAAeN,wBAAf,EAAyCD,aAAzC;AAEA;AACD;AACA;AACA;AACA;;AACCC,QAAAA,wBAAwB,CAACO,SAAzB,CAAmCF,WAAnC,GAAiD,UAAUH,MAAV,EAAkB;AAC/D,cAAIM,IAAI,GAAG,IAAX;AACA,eAAKC,OAAL,GAAeP,MAAf;AACAA,UAAAA,MAAM,CAACQ,KAAP;AACAR,UAAAA,MAAM,CACDS,EADL,CACQ,MADR,EACgB,UAAUC,KAAV,EAAiB;AACzBJ,YAAAA,IAAI,CAACK,IAAL,CAAU;AACNC,cAAAA,IAAI,EAAEF,KADA;AAENG,cAAAA,IAAI,EAAG;AACHC,gBAAAA,OAAO,EAAG;AADP;AAFD,aAAV;AAMH,WARL,EASKL,EATL,CASQ,OATR,EASiB,UAAUM,CAAV,EAAa;AACtB,gBAAGT,IAAI,CAACU,QAAR,EAAkB;AACd,mBAAKC,cAAL,GAAsBF,CAAtB;AACH,aAFD,MAEO;AACHT,cAAAA,IAAI,CAACY,KAAL,CAAWH,CAAX;AACH;AACJ,WAfL,EAgBKN,EAhBL,CAgBQ,KAhBR,EAgBe,YAAY;AACnB,gBAAGH,IAAI,CAACU,QAAR,EAAkB;AACdV,cAAAA,IAAI,CAACJ,cAAL,GAAsB,IAAtB;AACH,aAFD,MAEO;AACHI,cAAAA,IAAI,CAACa,GAAL;AACH;AACJ,WAtBL;AAuBH,SA3BD;;AA4BArB,QAAAA,wBAAwB,CAACO,SAAzB,CAAmCG,KAAnC,GAA2C,YAAY;AACnD,cAAG,CAACX,aAAa,CAACQ,SAAd,CAAwBG,KAAxB,CAA8BP,IAA9B,CAAmC,IAAnC,CAAJ,EAA8C;AAC1C,mBAAO,KAAP;AACH;;AACD,eAAKM,OAAL,CAAaC,KAAb;;AACA,iBAAO,IAAP;AACH,SAND;;AAOAV,QAAAA,wBAAwB,CAACO,SAAzB,CAAmCe,MAAnC,GAA4C,YAAY;AACpD,cAAG,CAACvB,aAAa,CAACQ,SAAd,CAAwBe,MAAxB,CAA+BnB,IAA/B,CAAoC,IAApC,CAAJ,EAA+C;AAC3C,mBAAO,KAAP;AACH;;AAED,cAAG,KAAKC,cAAR,EAAwB;AACpB,iBAAKiB,GAAL;AACH,WAFD,MAEO;AACH,iBAAKZ,OAAL,CAAaa,MAAb;AACH;;AAED,iBAAO,IAAP;AACH,SAZD;;AAcA3B,QAAAA,MAAM,CAACF,OAAP,GAAiBO,wBAAjB,CA7E0F,CAgF3F;;AAEA,2BAAAuB,WAAW,GAAG5B,MAAM,CAACF,OAArB;AAGC,OArFD,EAqFG,OAAO;AACR,oBAAYL,IADJ;AAER,mCAA2BE;AAFnB,OAAP,CArFH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '../utils';\nimport { __cjsMetaURL as _req0} from '../stream/GenericWorker';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var utils = require(\"../utils\");\n var GenericWorker = require(\"../stream/GenericWorker\");\n\n /**\n  * A worker that use a nodejs stream as source.\n  * @constructor\n  * @param {String} filename the name of the file entry for this stream.\n  * @param {Readable} stream the nodejs stream.\n  */\n function NodejsStreamInputAdapter(filename, stream) {\n     GenericWorker.call(this, \"Nodejs stream input adapter for \" + filename);\n     this._upstreamEnded = false;\n     this._bindStream(stream);\n }\n\n utils.inherits(NodejsStreamInputAdapter, GenericWorker);\n\n /**\n  * Prepare the stream and bind the callbacks on it.\n  * Do this ASAP on node 0.10 ! A lazy binding doesn't always work.\n  * @param {Stream} stream the nodejs stream to use.\n  */\n NodejsStreamInputAdapter.prototype._bindStream = function (stream) {\n     var self = this;\n     this._stream = stream;\n     stream.pause();\n     stream\n         .on(\"data\", function (chunk) {\n             self.push({\n                 data: chunk,\n                 meta : {\n                     percent : 0\n                 }\n             });\n         })\n         .on(\"error\", function (e) {\n             if(self.isPaused) {\n                 this.generatedError = e;\n             } else {\n                 self.error(e);\n             }\n         })\n         .on(\"end\", function () {\n             if(self.isPaused) {\n                 self._upstreamEnded = true;\n             } else {\n                 self.end();\n             }\n         });\n };\n NodejsStreamInputAdapter.prototype.pause = function () {\n     if(!GenericWorker.prototype.pause.call(this)) {\n         return false;\n     }\n     this._stream.pause();\n     return true;\n };\n NodejsStreamInputAdapter.prototype.resume = function () {\n     if(!GenericWorker.prototype.resume.call(this)) {\n         return false;\n     }\n\n     if(this._upstreamEnded) {\n         this.end();\n     } else {\n         this._stream.resume();\n     }\n\n     return true;\n };\n\n module.exports = NodejsStreamInputAdapter;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  '../utils': _req,\n  '../stream/GenericWorker': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}